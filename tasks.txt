необходимо разложить натуральное число типа uint64_t на простые множители (далее - разложение).

Оформить решение в виде класса, который позволяет
хранить разложение,
вычислять разложение числа (и наоборот, по разложению вычислять число -- для проверки), +
генерировать строку, которая в читаемом виде содержит разложение
и т.д.
Далее, необходимо написать программу, которая открывает текстовый файл (имя файла задавать из командной строки) и последовательно по одному считывает из файла числа, для которых и вычисляет разложение, складывая результат в выходной файл (имя также задается как параметр командной строки).

Считывать по одному и сразу складывать ответ в выходной файл - это требование. То есть нельзя открыть входной файл, считать все числа (в массив), найти разложение всех и скинуть все ответы разом в выходной файл. Предполагайте, что входной файл может содержать очень много чисел, которые не влезут в оперативную память.

Примечание: можно использовать простые (т.н. наивные) алгоритмы для поиска разложения, но можно получить больше опыта, удовольствия и баллов, если использовать более эффективные способы. Но максимум баллов можно получить и используя наивный алгоритм.
Прежде всего оценивается не работоспособность программы, а корректность кода и архитектуры.



http://connellybarnes.com/documents/factoring.pdf

продумать:
1) где хранить все значения? как вариант, использовать мап или файл
мап:
+ доступ за О(1) к уже имеющимся значениям
- см. залания, количество чисел может не влезать в оперативную память 
файл:
+любой размер
-траблы с доступом

как вариант, поставить ноутбук на ночь, разложить все числа, а потом просто вытаскивать значения
или оптимизировать алгоритм разложения

2) оптиммизация алгоритма разложения 
пробегаться по массиву простых чисел 

3) нужен ли мне класс, который проверяет результаты работы, или можно просто оформить это одним методом
- один класс, одна задача
+ поскольку у класса много одинаковых функций, возможно стоит просто объединить их
4) передавать имена как параметры командной строки

