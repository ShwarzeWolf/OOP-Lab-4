необходимо разложить натуральное число типа uint64_t на простые множители (далее - разложение).

Оформить решение в виде класса, который позволяет
хранить разложение,?
вычислять разложение числа (и наоборот, по разложению вычислять число -- для проверки), +
генерировать строку, которая в читаемом виде содержит разложение
и т.д.
Далее, необходимо написать программу, которая открывает текстовый файл (имя файла задавать из командной строки) и последовательно по одному считывает из файла числа, для которых и вычисляет разложение, складывая результат в выходной файл (имя также задается как параметр командной строки).

Считывать по одному и сразу складывать ответ в выходной файл - это требование. То есть нельзя открыть входной файл, считать все числа (в массив), найти разложение всех и скинуть все ответы разом в выходной файл. Предполагайте, что входной файл может содержать очень много чисел, которые не влезут в оперативную память.

Примечание: можно использовать простые (т.н. наивные) алгоритмы для поиска разложения, но можно получить больше опыта, удовольствия и баллов, если использовать более эффективные способы. Но максимум баллов можно получить и используя наивный алгоритм.
Прежде всего оценивается не работоспособность программы, а корректность кода и архитектуры.



http://connellybarnes.com/documents/factoring.pdf

тип uint64_t вмещает 8 байт, 64 бита, как следствие, кодирует 2 в 64 значений
0) написать функции выше+
1-2) придумать архитектуру, оформить всё в класс
3) прописать эксепшены
4) оптимизировать
5) разобраться с типами 
